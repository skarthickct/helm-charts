apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: amd64
  annotations:
    kubernetes.io/description: "NodePool for amd4 workloads"
spec:
  template:
    metadata:
      labels:
        karpenter.sh/time-window: "active"   # Controlled dynamically using cronjob
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.sh/time-window
          operator: In
          values: ["active"]
        # - key: karpenter.k8s.aws/instance-category
        #   operator: In
        #   values: ["t"]
        # - key: karpenter.k8s.aws/instance-generation
        #   operator: Gt
        #   values: ["2"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: default
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2 # Amazon Linux 2
  role: "KarpenterNodeRole-asista-ap-south-1-Dev-eks" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "asista-ap-south-1-Dev-eks" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "asista-ap-south-1-Dev-eks" # replace with your cluster name
  amiSelectorTerms:
    - id: "ami-037d1887f24a36808"
    - id: "ami-04655aa95cb2514c7"
#   - id: "${GPU_AMI_ID}" # <- GPU Optimized AMD AMI 
#   - name: "amazon-eks-node-${K8S_VERSION}-*" # <- automatically upgrade when a new AL2 EKS Optimized AMI is released. This is unsafe for production workloads. Validate AMIs in lower environments before deploying them to production.
